AWSTemplateFormatVersion: "2010-09-09"

Description: >
  Modified from the:
    AWS CloudFormation Sample Template Continuous Delievery: This template
  builds an AWS CodePipeline pipeline that implements a continuous delivery release
  process for AWS CloudFormation stacks. Submits a CloudFormation source artifact
  to an Amazon S3 location before building the pipeline. The pipeline uses the
  artifact to automatically create stacks and change sets.
    This is intended as a potential reference implementation of our network and pipeline.
    When deleting, delete the VPC stacks first, as deleting this stack will delete the roles required.
Parameters:
  PipelineName:
    Description: A name for the pipeline
    Type: String
    Default: "MainNetwork"
  GithubUser:
    Description: Github account where the source files exist for this VPC
    Type: String
  GithubToken:
    Description: Secret. Token used for access to the account specified.
    NoEcho: true
    Type: String
    ConstraintDescription: may be a personal access token.
  Repo:
    Type: String
    Description: GitHub Repo to pull from. Only the Name. not the URL
    Default: simple_web_cloudformation
  Branch:
    Type: String
    Description: Branch to use from Repo. Only the Name. not the URL
    Default: master
  TemplateFileName:
    Default: templates/infrastructure/vpc.yaml
    Description: The file name of the VPC template
    Type: String
    ConstraintDescription: relative path within the source repository "Repo".
  TestStackName:
    Default: Test-Vpc
    Description: A name for the test VPC stack
    Type: String
  TestStackConfig:
    Default: templates/infrastructure/test-vpc-configuration.json
    Description: The configuration file name for the test vpc stack
    Type: String
    ConstraintDescription: relative path within the source repository "Repo".
  ProdStackName:
    Default: Prod-Vpc
    Description: A name for the production VPC stack
    Type: String
  ProdStackConfig:
    Default: templates/infrastructure/prod-vpc-configuration.yaml
    Description: The configuration file name for the production VPC stack
    Type: String
    ConstraintDescription: relative path within the source repository "Repo".
  ChangeSetName:
    Default: UpdatePreview-Vpc
    Description: A name for the production VPC stack change set
    Type: String
  Email:
    Description: The email address where CodePipeline sends pipeline notifications
    Type: String

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "CodePipeline Settings"
        Parameters:
          - PipelineName
          - GithubUser
          - GithubToken
          - Repo
          - Branch
          - Email
      - Label:
          default: "Stack Config File (vpc.yaml)"
        Parameters:
          - TemplateFileName
      - Label:
          default: "Test Stack Settings"
        Parameters:
          - TestStackName
          - TestStackConfig
      - Label:
          default: "Production Stack Settings"
        Parameters:
          - ChangeSetName
          - ProdStackName
          - ProdStackConfig
Resources:
  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
  CFNRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Statement:
          - Action: ['sts:AssumeRole']
            Effect: Allow
            Principal:
              Service: [cloudformation.amazonaws.com]
          Version: '2012-10-17'
        Path: /
        Policies:
          - PolicyName: CloudFormationRole
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Action:
                    - 'ec2:*'
                  Effect: Allow
                  Resource: '*'
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codepipeline.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 's3:*'
                - 'cloudformation:CreateStack'
                - 'cloudformation:DescribeStacks'
                - 'cloudformation:DeleteStack'
                - 'cloudformation:UpdateStack'
                - 'cloudformation:CreateChangeSet'
                - 'cloudformation:ExecuteChangeSet'
                - 'cloudformation:DeleteChangeSet'
                - 'cloudformation:DescribeChangeSet'
                - 'cloudformation:SetStackPolicy'
                - 'iam:PassRole'
                - 'sns:Publish'
                Effect: Allow
                Resource: '*'
  CodePipelineSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref Email
          Protocol: email

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref 'ArtifactStoreBucket'
        Type: S3
      DisableInboundStageTransitions: []
      Name: !Ref 'PipelineName'
      RoleArn: !GetAtt [PipelineRole, Arn]
      Stages:
        - Name: Source
          Actions:
          - InputArtifacts: []
            Name: Source
            ActionTypeId:
              Category: Source
              Owner: ThirdParty
              Version: '1'
              Provider: GitHub
            OutputArtifacts:
            - Name: TemplateSource
                # Ref: MyInputArtifacts #use input artifacts when this comes from a master artifact
                # see the stelligent samples for how thier master template uses this one.
            Configuration:
              Owner:
                Ref: GithubUser
              Repo:
                Ref: Repo
              Branch:
                Ref: Branch
              OAuthToken:
                Ref: GithubToken
            RunOrder: 1
        - Name: TestStage
          Actions:
            - Name: CreateStack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: TemplateSource
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Ref TestStackName
                TemplateConfiguration: !Sub "TemplateSource::${TestStackConfig}"
                TemplatePath: !Sub "TemplateSource::${TemplateFileName}"
              RunOrder: 1
            - Name: ApproveTestStack
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              Configuration:
                NotificationArn: !Ref CodePipelineSNSTopic
                CustomData: !Sub 'Do you want to create a change set against the production stack and delete the ${TestStackName} stack?'
              RunOrder: 2
            - Name: DeleteTestStack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: DELETE_ONLY
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Ref TestStackName
              RunOrder: 3
        - Name: ProdStage
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: TemplateSource
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Ref ProdStackName
                ChangeSetName: !Ref ChangeSetName
                TemplateConfiguration: !Sub "TemplateSource::${ProdStackConfig}"
                TemplatePath: !Sub "TemplateSource::${TemplateFileName}"
              RunOrder: 1
            - Name: ApproveChangeSet
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: '1'
              Configuration:
                NotificationArn: !Ref CodePipelineSNSTopic
                CustomData: !Sub 'A new change set was created for the ${ProdStackName} stack. Do you want to implement the changes?'
              RunOrder: 2
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: !Ref ChangeSetName
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Ref ProdStackName
              RunOrder: 3
